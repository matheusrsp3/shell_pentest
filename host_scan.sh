#!/usr/bin/env bash
#
# host_scan.sh - Vai escanear todos os hosts ativos [UP] em uma rede
#
# Autor     : mcarvalho - (Matheus Rodrigues)
# Manutenção: mcarvalho - (Matheus Rodrigues)
# Contato   : matheusrsp3@gmail.com
#
# ---------------------------------------------------------------------------------------
# Descrição do programa:
#   Descreva aqui em baixo como o programa funciona detalhadamente
# 
# Exemplos:
#   $ ./nome_do_programa.sh parametro1
#   saida_tela?
#   $ ./nome_do_programa.sh parametro2
#   saida_tela?
#
# ---------------------------------------------------------------------------------------
# Histórico:
#   v1.0 dd/mm/aaaa, autor
#   - Descreva oque tem nesta versão em tópicos
#   - Foi mudado o layout do programa
#   - Foi acrescentado uma nova função ao programa
#
# ---------------------------------------------------------------------------------------
# Testado:
#    Sistema Operacional - Linux Mint 21.1
#    Arquitetura         - x86-64
#    Versão Kernel       - Linux 5.15.0-78-generic
#    Versão Bash         - 5.1.16
#
# ---------------------------------------------------------------------------------------
# ---------------------------------- Variaveis Globais ----------------------------------
menuAjuda="
Modos de uso:
    -h) Exibe este menu de ajuda
    -V) Exibe a versão do programa
    -s) <xxx.xxx.xxx> - Escanear a rede somente hosts [UP]
    -escanear--verboso) <xxx.xxx.xxx> - Escanear a rede saida completa
"
versaoPrograma="${0//.\//} - v1.0"

corVermelho="\e[31;1m"
corVerde="\e[32;1m"
corNormal="\e[m"
chaveAtivarSaidaCompleta=0
# --------------------------------------- Funções ---------------------------------------
function escanearRede() {
    if [ -n "$1" ]; then
        echo "Aguarde iniciando varredura..."
        for host in {0..215}; do
            if (ping -q -c1 -W0.5 "${1}.$host" 1>/dev/null 2>&-); then
                echo -e "Host ${1}.$host $corVerde\t[UP]$corNormal"
            elif (("$chaveAtivarSaidaCompleta" == "1")); then
                echo -e "Host ${1}.$host $corVermelho\t[DOWN]$corNormal"
            fi
        done
    else
        echo -e "Por favor passe a rede como parâmetro $corVermelho[xxx.xxx.xxx]$corNormal"
    fi
}
# --------------------------------- Execução do programa ---------------------------------
# Opção -n do comando test valida se realmente existe o parametro "$1", se não existir o
# programa não inicia
while [ -n "$1" ]; do
    case "$1" in
        -h) echo "$menuAjuda" && exit 0 ;;
        -V) echo "$versaoPrograma" && exit 0 ;;
        -s) escanearRede "$2" && exit 0 ;;
        -escanear--verboso) chaveAtivarSaidaCompleta=1 && escanearRede "$2" && exit 0;;
        *)  echo "$menuAjuda" && exit 1;;
    esac
done
